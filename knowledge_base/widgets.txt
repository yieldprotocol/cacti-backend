Widget magic command: <|display-transfer({token},{amount},{address})|>
Description of widget: This widget is used to transfer a token from a user's wallet to another address.
Required parameters:
-{token}: symbol of the token being transferred
-{amount}: quantity to transfer
-{address}: transfer recipient address
---
Widget magic command: <|fetch-price({baseToken},{quoteToken})|>
Description of widget: This widget is used to get the price of a token. Note, when the quoteToken isn't explicitly specified assume it to be USD.
Required parameters:
-{baseToken}: token to get the price of
-{quoteToken}: token to use as units for price
Return value description:
-price of a base token in units of a quote token.
---
Widget magic command: <|fetch-balance({token},{address})|>
Description of widget: This widget is used when we need the balance of a token in an account or wallet. Don't use this if we don't have the address.
Required parameters:
-{token}: token to get the balance of.
-{address}: address of the account or wallet to check the balance of
Return value description:
-balance of a token in an account or wallet, in decimal units
---
Widget magic command: <|fetch-my-balance({token})|>
Description of widget: This widget is used when we need the balance of a token in the user's connected wallet
Required parameters:
-{token}: token to get the balance of.
Return value description:
-balance of a token in connected wallet, in decimal units
---
Widget magic command: <|fetch-transactions({address},{last_n})|>
Description of widget: This widget is used when we need the transaction details in an account or wallet
Required parameters:
-{address}: address of the account or wallet to check the transactions of
-{last_n}: how many latest transactions the user wants to get.
Return value description:
-the transaction details
---
Widget magic command: <|fetch-gas({address})|>
Description of widget: This widget is used when we need the all gas used for transactions in an account or wallet
Required parameters:
-{address}: address of the account or wallet to check the gas of
Return value description:
-the gas amount used
---
Widget magic command: <|fetch-eth-in({address})|>
Description of widget: This widget is used when we need the all ETH inflow into an account or wallet
Required parameters:
-{address}: address of the account or wallet to check the inflow ETH
Return value description:
-the inflow ETH amount
---
Widget magic command: <|fetch-eth-out({address})|>
Description of widget: This widget is used when we need the all ETH outflow from an account or wallet
Required parameters:
-{address}: address of the account or wallet to check the outflow ETH
Return value description:
-the outflow ETH amount
---
Widget magic command: <|display-uniswap({tokenToSell},{tokenToBuy},{transactionKeyword},{amount})|>
Description of widget: This widget is used when we need to use the Uniswap decentralized application for trading one token for another. To create a Uniswap transaction, you need either:
1.) A token to sell, a token to buy, the transaction keyword "SELLAMOUNT", and an amount to sell, OR
2.) A token to sell, a token to buy, the transaction keyword "BUYAMOUNT", and an amount to buy.
Required parameters:
-{tokenToSell}: token to sell in the swap transaction
-{tokenToBuy}: token to buy in the swap transaction
-{transactionKeyword}: either SELLAMOUNT if amount refers to token to sell or BUYAMOUNT if amount refers to token to buy
-{amount}: amount of token described by transaction keyword that we are trying to buy or sell
---
Widget magic command: <|fetch-nft-buy-asset({network},{address},{tokenID})|>
Description of widget: This widget is used when we need to buy an NFT asset of a collection on the OpenSea marketplace, given its network, address, and token ID. Don't use this if we don't have the collection network and address and token ID of the asset we want to purchase.
Required parameters:
-{network}: network of the NFT asset
-{address}: contract address of the NFT asset
-{tokenID}: token ID of the asset
Return value description:
-a transaction dialog for purchase of the NFT
---
Widget magic command: <|fetch-nft-search({query})|>
Description of widget: This widget is used when we need to search for NFT collections given a query phrase, a description, or a name.
Required parameters:
-{query}: string of keywords to describe the kind of NFT collections to find
Return value description:
-a list of text describing NFT collections that were found
---
Widget magic command: <|fetch-nft-collection-assets-by-trait({network},{address},{traitName},{traitValue})|>
Description of widget: This widget is used when we need to list assets with a particular trait name and value from a specific NFT collection given its network and address. Don't use this if we don't have the collection network and address.
Required parameters:
-{network}: network of the NFT collection
-{address}: contract address of the NFT collection
-{traitName}: name of trait
-{traitValue}: value of trait
Return value description:
-a list of text describing NFT assets that match the trait value
---
Widget magic command: <|fetch-nft-collection-assets-for-sale-by-trait({network},{address},{traitName},{traitValue})|>
Description of widget: This widget is used when we need to list assets available for purchase with a particular trait name and value from a specific NFT collection given its network and address. Don't use this if we don't have the collection network and address.
Required parameters:
-{network}: network of the NFT collection
-{address}: contract address of the NFT collection
-{traitName}: name of trait
-{traitValue}: value of trait
Return value description:
-a list of text describing NFT assets for sale/available for purchase that match the trait value
---
Widget magic command: <|fetch-nft-collection-info({network},{address})|>
Description of widget: This widget is used when we need to retrieve data and assets of an NFT collection given its network and address.
Required parameters:
-{network}: network of the NFT collection
-{address}: contract address of the NFT collection
Return value description:
-text with data and some assets of the NFT collection
---
Widget magic command: <|fetch-nft-collection-assets-for-sale({network},{address})|>
Description of widget: This widget is used when we need to retrieve assets available for purchase of an NFT collection given its network and address.
Required parameters:
-{network}: network of the NFT collection
-{address}: contract address of the NFT collection
Return value description:
-text with assets of the NFT collection that are for sale/available for purchase
---
Widget magic command: <|fetch-nft-collection-traits({network},{address})|>
Description of widget: This widget is used when we need to retrieve traits of an NFT collection given its network and address.
Required parameters:
-{network}: network of the NFT collection
-{address}: contract address of the NFT collection
Return value description:
-a list of text describing traits of the NFT collection
---
Widget magic command: <|fetch-nft-collection-trait-values({network},{address},{traitName})|>
Description of widget: This widget is used when we need to retrieve trait values of a trait of an NFT collection given its network and address.
Required parameters:
-{network}: network of the NFT collection
-{address}: contract address of the NFT collection
-{traitName}: name of trait to fetch values of
Return value description:
-a list of text describing values of the trait of the NFT collection
---
Widget magic command: <|fetch-nft-asset-traits({network},{address},{tokenID})|>
Description of widget: This widget is used when we need to retrieve data and traits of an NFT asset in a collection given its network, address, and token ID.
Required parameters:
-{network}: network of the NFT asset
-{address}: contract address of the NFT asset
-{tokenID}: token ID of the asset
Return value description:
-text with data and list of trait names and values of the NFT asset
---
Widget magic command: <|fetch-yields({token},{network},{count})|>
Description of widget: This widget is used when the user wants the yields for crypto assets. The user may not specify all parameters so do not guess any parameter.
Parameters:
-{token}: token to get the yield for. Normalize the token name to its popular symbol representation in the ecoystem. Use "*" when parameter not available or the user wants all tokens
-{network}: blockchain to get the yield for. Normalize the network name to its popular representation in the ecosystem. Use "*" when parameter not available or the user wants all networks
-{count}: number of yield sources. Use "*" when parameter not available
Return value description:
-JSON object with yield information
---
Widget magic command: <|ens-from-address({address})|>
Description of widget: This widget is used when the user wants the ENS domain name (*.eth) for a wallet address
Required Parameters:
-{address}: address of the account or wallet
Return value description:
-a human-readable string with ENS domain
---
Widget magic command: <|address-from-ens({domain})|>
Description of widget: This widget is used when the user wants the wallet address for an ENS domain name (*.eth)
Required Parameters:
-{domain}: domain name of the account or wallet
Return value description:
-a human-readable string with wallet address
---
Widget magic command: <|register-ens-domain({domain})|>
Description of widget: This widget is used when the user wants to register an ENS domain that ends with *.eth
Required Parameters:
-{domain}: domain name to register
---
Widget magic command: <|set-ens-text({domain},{key},{value})|>
Description of widget: This widget is used when the user wants to set the text record for an ENS domain that ends with *.eth in a key value pair format
Required Parameters:
-{domain}: ENS domain name
-{key}: key of the text record
-{value}: value of the text record
---
Widget magic command: <|set-ens-primary-name({domain})|>
Description of widget: This widget is used when the user wants to set a primary ENS name for their connected wallet account
Required Parameters:
-{domain}: domain name to use as primary ENS name
---
Widget magic command: <|set-ens-avatar-nft({domain},{nftContractAddress},{nftId})|>
Description of widget: This widget is used when the user wants to set an nft as their ENS domain's avatar. Do not guess any parameter, if any parameter is missing, set the default value as 'None'
Required Parameters:
-{domain}: ENS domain name
-{nftContractAddress}: contract address of the NFT
-{nftId}: token ID of the NFT
---
Widget magic command: <|aave-supply({token},{amount})|>
Description of widget: This widget is used when the user wants to deposit or supply tokens into Aave project.
Required Parameters:
-{token}: token to supply
-{amount}: quantity to supply
---
Widget magic command: <|aave-borrow({token},{amount})|>
Description of widget: This widget is used when the user wants to borrow tokens from Aave project.
Required Parameters:
-{token}: token to borrow
-{amount}: quantity to borrow
---
Widget magic command: <|aave-repay({token},{amount})|>
Description of widget: This widget is used when the user wants to repay back borrowed tokens from Aave project.
Required Parameters:
-{token}: token to repay
-{amount}: quantity to repay
---
Widget magic command: <|aave-withdraw({token},{amount})|>
Description of widget: This widget is used when the user wants to withdraw deposited tokens from Aave project.
Required Parameters:
-{token}: token to withdraw
-{amount}: quantity to withdraw
---
Widget magic command: <|display-yield-farm({project},{network}, {token}, {amount})|>
Description of widget: This widget is only to be used for the Compound project to allow the user to yield farm by putting tokens or depositing tokens of a certain amount into the Compound project
Required Parameters:
-{project}: name of the project to deposit the token in
-{network}: network or blockchain of the project. Default to Ethereum if not specified
-{token}: token to deposit in the project
-{amount}: amount of token to deposit in the project
---
Widget magic command: <|fetch-app-info({query})|>
Description of widget: This widget is used when we need to handle common questions and answers about the chat assistant app, what it can do, how to interact with it, at a high-level. Only useful for questions about the chat app experience. It does not know specific information about the web3 ecosystem, of tokens or NFTs or contracts, or access to live data and APIs.
Required parameters:
-{query}: a standalone query with all relevant contextual details pertaining to the chat web application
Return value description:
-an answer to the question, with suggested follow-up questions if available
---
Widget magic command: <|fetch-scraped-sites({query})|>
Description of widget: This widget is used when we need to answer questions using general content scraped from web3 sites. It does not know about this app or about widget magic commands for invoking transactions or fetching data about specific things like NFTs or balances.
Required parameters:
-{query}: a standalone question representing information to be retrieved from the index
Return value description:
-a summarized answer with source citations
---
Widget magic command: <|liquity-borrow({borrowAmount},{collateralAmount})|>
Description of widget: This widget is used when the user wants to borrow LUSD using ETH as collateral from the Liquity protocol.
Required Parameters:
-{borrowAmount}: amount of LUSD to borrow
-{collateralAmount}: amount of ETH to use as collateral
---
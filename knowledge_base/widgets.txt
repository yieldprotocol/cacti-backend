Widget magic command: <|transfer({token}, {amount}, {address})|>
Description of widget: This widget is used to transfer a token from a user's wallet to another address.
Connected wallet required: yes
Transaction confirmation required: yes
Required parameters:
-{token}: symbol of the token being transferred
-{amount}: quantity to transfer
-{address}: transfer recipient address
Example: if a user wants to transfer 2.3 ETH to 'vitalik.eth', an assistant should trigger the transaction completion box with "<|transfer('ETH', 2.3, 'vitalik.eth')|>".
---
Widget magic command: <|price({baseToken}, {quoteToken})|>
Description of widget: This widget is used to get the price of a base token in units of a quote token.
Connected wallet required: no
Transaction confirmation required: no
Required parameters:
-{baseToken}: token to get the price of
-{quoteToken}: token to use as units for price
Example: if the user has requested the price of ETH in USDC, an assistant may answer with "The cost of ETH in USDC is <|price('ETH','USDC')|>".
---
Widget magic command: <|balance({token})|>
Description of widget: This widget is used when a user requests their balance of a token.
Connected wallet required: yes
Transaction confirmation required: no
Required parameters:
-{token}: token to get the balance of from the user's wallet
Example: if the user requests their balance of USDC, an assistant may answer with "Your balance of USDC is <|balance('USDC')|>".
---
Widget magic command: <|uniswap({tokenToSell}, {tokenToBuy}, {transactionKeyword}, {amount})|>
Description of widget: This widget is used when a user wishes to use the Uniswap decentralized application for trading one token for another. To create a Uniswap transaction, a user must provide one of two possible combinations of information:
1.) A token to sell, a token to buy, and an amount to sell (either a numeric value, or "max" to represent the maximum amount, which is equal to their wallet balance of that token). The transaction keyword to use is "SELLAMOUNT".
2.) A token to sell, a token to buy, and an amount to buy (either a numeric value, or "max" to represent the maximum amount the user can buy given the the amount of tokens they have to sell in their wallet). The transaction keyword to use is "BUYAMOUNT".
When a user has provided the requested information, you can provide them with a transaction completion box.
Connected wallet required: yes
Transaction confirmation required: yes
Required parameters:
-{tokenToSell}: token to sell in the swap transaction
-{tokenToBuy}: token to buy in the swap transaction
-{transactionKeyword}: either SELLAMOUNT or BUYAMOUNT depending on the direction
-{amount}: amount of token described by transaction keyword
Example: if a user wants to sell 5 WETH to buy USDC, an assistant should trigger the transaction completion box with "<|uniswap('WETH', 'USDC', 'SELLAMOUNT', 5.00)|>".
---
Widget magic command: <|MakerDao({collateralToken}, {collateralTokenAmount}, {daiAmountToBorrow})|>
Description of widget: MakerDao is a decentralized application for borrowing Dai, a dollar-pegged stabledoin. To borrow Dai, a user must provide the following information, the collateral to provide, the amount of collateral provided, and the amount of Dai to borrow. When a user has provided the requested information, an assistant can provide them with a transaction completion box.
Connected wallet required: yes
Transaction confirmation required: yes
Required parameters:
-{collateralToken}: the token to provide as collateral for the borrowing of Dai
-{collateralTokenAmount}: the amount of token provided as collateral
-{daiAmountToBorrow}: the amount of Dai to borrow
Example: if a user wants to borrow 1000 Dai by providing 10 WETH, an assistant should trigger the transaction completion box with "You may complete the borrow with using this dialog: <|MakerDao('WETH', 10, 1000)|>".

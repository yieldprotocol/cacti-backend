- _name_: display_transfer
  description: Tokens in Ethereum represent assets. They can be used to represent
    fiat currencies, cryptocurrencies, or other assets. They can be traded in DEXs
    or in centralized exchanges. They can also be transferred between users or wallets.
    Use this widget to transfer a token from a user's wallet to another address
  tags:
  - wallet
  parameters:
    properties:
      address:
        description: Transfer recipient address.
        type: string
      amount:
        description: Quantity to transfer.
        type: string
      token:
        description: Symbol of the token being transferred.
        type: string
    required:
    - token
    - amount
    - address
    type: object
  return_value_description: ''
- _name_: fetch_nft_buy_asset
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to buy an NFT asset of a collection on the OpenSea marketplace, given
    its network, address, and token ID. Don't use this if we don't have the collection
    network and address and token ID of the asset we want to purchase.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT asset.
        type: string
      network:
        description: Network of the NFT asset.
        type: string
      tokenID:
        description: Token ID of the asset.
        type: string
    required:
    - network
    - address
    - tokenID
    type: object
  return_value_description: a transaction dialog for purchase of the NFT
- _name_: fetch_nft_search
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to search for NFT collections given a query phrase, a description, or
    a name.
  tags:
  - nft
  parameters:
    properties:
      query:
        description: String of keywords to describe the kind of NFT collections to
          find.
        type: string
    required:
    - query
    type: object
  return_value_description: a list of text describing NFT collections that were found
- _name_: fetch_nft_collection_assets_by_trait
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to list assets with a particular trait name and value from a specific
    NFT collection given its network and address. Don''t use this if we don''t have
    the collection network and address.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT collection.
        type: string
      network:
        description: Network of the NFT collection.
        type: string
      traitName:
        description: Name of trait.
        type: string
      traitValue:
        description: Value of trait.
        type: string
    required:
    - network
    - address
    - traitName
    - traitValue
    type: object
  return_value_description: a list of text describing NFT assets that match the trait
    value
- _name_: fetch_nft_collection_assets_for_sale_by_trait
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to list assets available for purchase with a particular trait name and
    value from a specific NFT collection given its network and address. Don't use
    this if we don't have the collection network and address.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT collection.
        type: string
      network:
        description: Network of the NFT collection.
        type: string
      traitName:
        description: Name of trait.
        type: string
      traitValue:
        description: Value of trait.
        type: string
    required:
    - network
    - address
    - traitName
    - traitValue
    type: object
  return_value_description: a list of text describing NFT assets for sale/available
    for purchase that match the trait value
- _name_: fetch_nft_collection_info
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to retrieve data and assets of an NFT collection given its network and
    address.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT collection.
        type: string
      network:
        description: network of the NFT collection.
        type: string
    required:
    - network
    - address
    type: object
  return_value_description: text with data and some assets of the NFT collection
- _name_: fetch_nft_collection_assets_for_sale
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to retrieve assets available for purchase of an NFT collection given its
    network and address.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT collection.
        type: string
      network:
        description: network of the NFT collection.
        type: string
    required:
    - network
    - address
    type: object
  return_value_description: text with assets of the NFT collection that are for sale/available
    for purchase
- _name_: fetch_nft_collection_traits
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to retrieve traits of an NFT collection given its network and address.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT collection.
        type: string
      network:
        description: Network of the NFT collection.
        type: string
    required:
    - network
    - address
    type: object
  return_value_description: a list of text describing traits of the NFT collection
- _name_: fetch_nft_collection_trait_values
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to retrieve trait values of a trait of an NFT collection given its network
    and address.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT collection.
        type: string
      network:
        description: network of the NFT collection.
        type: string
      traitName:
        description: Name of trait to fetch values of.
        type: string
    required:
    - network
    - address
    - traitName
    type: object
  return_value_description: a list of text describing values of the trait of the NFT
    collection
- _name_: fetch_nft_asset_traits
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to retrieve data and traits of an NFT asset in a collection given its
    network, address, and token ID.
  tags:
  - nft
  parameters:
    properties:
      address:
        description: Contract address of the NFT asset.
        type: string
      network:
        description: Network of the NFT asset.
        type: string
      tokenID:
        description: Token ID of the asset.
        type: string
    required:
    - network
    - address
    - tokenID
    type: object
  return_value_description: text with data and list of trait names and values of the
    NFT asset
- _name_: fetch_yields
  description: Tokens in Ethereum represent assets. They can be used to represent
    fiat currencies, cryptocurrencies, or other assets. They can be traded in DEXs
    or in centralized exchanges. They can also be transferred between users or wallets.
    Tokens often represent a lending position on a lending platform, for which the user
    receives a yield. Use this widget to get the yields for crypto assets. The user
    may not specify all parameters so do not guess any parameter.
  tags:
  - analytics
  - defi
  - yield
  parameters:
    properties:
      count:
        description: Number of yield sources. Use '*' when parameter not available.
        type: string
      network:
        description: Blockchain to get the yield for. Normalize the network name to
          its popular representation in the ecosystem. Use '*' when parameter not
          available or the user wants all networks.
        type: string
      token:
        description: Token to get the yield for. Normalize the token name to its popular
          symbol representation in the ecoystem. Use '*' when parameter not available
          or the user wants all tokens.
        type: string
    required:
    - token
    - network
    - count
    type: object
  return_value_description: JSON object with yield information
- _name_: fetch_price
  description: Tokens in Ethereum represent assets. They can be used to represent
    fiat currencies, cryptocurrencies, or other assets. They can be traded in DEXs
    or in centralized exchanges. They can also be transferred between users or wallets.
    Use this widget to get the price of a token. Note, when the quoteToken isn't
    explicitly specified assume it to be USD.
  tags:
  - analytics
  - defi
  - price
  parameters:
    properties:
      basetoken:
        description: Token to get the price of.
        type: string
      quotetoken:
        description: Token to use as units for price.
        type: string
    required:
    - basetoken
    - quotetoken
    type: object
  return_value_description: price of a base token in units of a quote token.
- _name_: ens_from_address
  description: ENS is a decentralized naming system for wallet addresses. It allows
    users to set a human-readable name for their wallet address. Use this widget to
    get the ENS domain name (*.eth) for a wallet address.
  tags:
  - wallet
  - address
  - ens
  parameters:
    properties:
      address:
        description: Address of the account or wallet.
        type: string
    required:
    - address
    type: object
  return_value_description: a humanreadable string with ENS domain
- _name_: address_from_ens
  description: ENS is a decentralized naming system for wallet addresses. It allows
    users to set a human-readable name for their wallet address. Use this widget to
    get the wallet address for an ENS domain name (*.eth).
  tags:
  - wallet
  - address
  - ens
  parameters:
    properties:
      domain:
        description: Domain name of the account or wallet.
        type: string
    required:
    - domain
    type: object
  return_value_description: a humanreadable string with wallet address
- _name_: register_ens_domain
  description: ENS is a decentralized naming system for wallet addresses. It allows
    users to set a human-readable name for their wallet address. Use this widget to
    register an ENS domain that ends with *.eth
  tags:
  - ens
  - register
  parameters:
    properties:
      domain:
        description: Domain name to register.
        type: string
    required:
    - domain
    type: object
  return_value_description: ''
- _name_: set_ens_text
  description: ENS is a decentralized naming system for wallet addresses. It allows
    users to set a human-readable name for their wallet address. Use this widget to
    set the text record for an ENS domain that ends with *.eth in a key
    value pair format.
  tags:
  - ens
  - update
  parameters:
    properties:
      domain:
        description: ENS domain name.
        type: string
      key:
        description: Key of the text record.
        type: string
      value:
        description: Value of the text record.
        type: string
    required:
    - domain
    - key
    - value
    type: object
  return_value_description: ''
- _name_: set_ens_primary_name
  description: ENS is a decentralized naming system for wallet addresses. It allows
    users to set a human-readable name for their wallet address. Use this widget to
    set a primary ENS name for their connected wallet account.
  tags:
  - ens
  - update
  parameters:
    properties:
      domain:
        description: Domain name to use as primary ENS name.
        type: string
    required:
    - domain
    type: object
  return_value_description: ''
- _name_: set_ens_avatar_nft
  description: ENS is a decentralized naming system for wallet addresses. It allows
    users to set a human-readable name for their wallet address. Users can also set
    an NFT as their ENS domain's avatar. Use this widget to set an nft as their ENS
    domain's avatar. Do not guess any parameter, if any parameter is missing, set the
    default value as 'None'.
  tags:
  - ens
  - update
  - nft
  parameters:
    properties:
      domain:
        description: ENS domain name.
        type: string
      nftContractAddress:
        description: Contract address of the NFT.
        type: string
      nftId:
        description: Token ID of the NFT.
        type: string
    required:
    - domain
    - nftContractAddress
    - nftId
    type: object
  return_value_description: ''
- _name_: aave_supply
  description: Aave is a variable rate borrowing and lending application. When lending,
    the user transfers an asset to Aave, and Aave lends the user a token representing the
    lending position. Aave pays the user an interest rate for as long as the lending position is open.
    Use this widget to open a lend or supply position on Aave. This is also known as a deposit.
  tags:
  - defi
  - aave
  - lend
  parameters:
    properties:
      amount:
        description: Quantity to supply.
        type: string
      token:
        description: Token to supply.
        type: string
    required:
    - token
    - amount
    type: object
  return_value_description: ''
- _name_: aave_borrow
  description: Aave is a variable rate borrowing and lending application. When borrowing,
    the user transfers collateral to Aave, and Aave lends the user the desired token.
    The user pays Aave an interest rate for as long as the borrowing position is open.
    Use this widget to open a borrowing position on Aave.
  tags:
  - defi
  - aave
  - borrow
  parameters:
    properties:
      amount:
        description: Quantity to borrow.
        type: string
      token:
        description: Token to borrow.
        type: string
    required:
    - token
    - amount
    type: object
  return_value_description: ''
- _name_: aave_repay
  description: Aave is a variable rate borrowing and lending application. When borrowing,
    the user transfers collateral to Aave, and Aave lends the user the desired token. To
    repay its debt, the user transfers the borrowed token to Aave, and can then withdraw
    the collateral supplied before.
    Use this widget to close or repay a borrowing position on Aave.
  tags:
  - defi
  - aave
  - borrow
  parameters:
    properties:
      amount:
        description: Quantity to repay.
        type: string
      token:
        description: Token to repay.
        type: string
    required:
    - token
    - amount
    type: object
  return_value_description: ''
- _name_: aave_withdraw
  description: Aave is a variable rate borrowing and lending application. When lending,
    the user transfers an asset to Aave, and Aave lends the user a token representing the
    lending position. Aave pays the user an interest rate for as long as the lending position is open.
    Use this widget to close a lend or supply position on Aave. This is also know as a withdrawal.
  tags:
  - defi
  - aave
  - lend
  parameters:
    properties:
      amount:
        description: quantity to withdraw.
        type: string
      token:
        description: Token to withdraw.
        type: string
    required:
    - token
    - amount
    type: object
  return_value_description: ''
- _name_: fetch_balance
  description: Get the balance of a token in an account or wallet. Don't use this
    if we don't have the address.
  tags:
  - wallet
  - address
  - balance
  parameters:
    properties:
      address:
        description: Address of the account or wallet to check the balance of.
        type: string
      token:
        description: Token to get the balance of.
        type: string
    required:
    - token
    - address
    type: object
  return_value_description: balance of a token in an account or wallet, in decimal
    units
- _name_: display_yield_farm
  description: Compound is a variable rate borrowing and lending application. When lending,
    the user transfers an asset to Compound, and Compound lends the user a token representing the
    lending position. Compound pays the user an interest rate for as long as the lending position is open.
    Use this widget to open a lend or supply position on Compound.
  tags:
  - defi
  - compound
  - lend
  parameters:
    properties:
      amount:
        description: Amount of token to deposit in the project.
        type: string
      network:
        description: Network or blockchain of the project. Default to Ethereum if
          not specified.
        type: string
      project:
        description: Name of the project to deposit the token in.
        type: string
      token:
        description: Token to deposit in the project.
        type: string
    required:
    - project
    - network
    - token
    - amount
    type: object
  return_value_description: ''
- _name_: fetch_app_info
  description: Used when we need to handle common questions and answers about the
    chat assistant app, what it can do, how to interact with it, at a high-level.
    Only useful for questions about the chat app experience. It does not know specific
    information about the web3 ecosystem, of tokens or NFTs or contracts, or access
    to live data and APIs.
  tags:
  - info
  - self
  - about
  parameters:
    properties:
      query:
        description: a standalone query with all relevant contextual details pertaining
          to the chat web application.
        type: string
    required:
    - query
    type: object
  return_value_description: an answer to the question, with suggested followup questions
    if available
- _name_: fetch_scraped_sites
  description: Answer questions using general content scraped from web3 sites. It
    does not know about this app or about widget magic commands for invoking transactions
    or fetching data about specific things like NFTs or balances.
  tags:
  - info
  - about
  parameters:
    properties:
      query:
        description: a standalone question representing information to be retrieved
          from the index.
        type: string
    required:
    - query
    type: object
  return_value_description: a summarized answer with source citations
- _name_: display_zksync_deposit
  description: L2 networks on Ethereum provide lower gas costs and faster transactions.
    However, users need to deposit tokens into L2 networks before they can use them.
    Use this widget to bridge and deposit tokens from mainnet L1 to zksync L2.
  tags:
  - defi
  - zksync
  - bridge
  parameters:
    properties:
      amount:
        description: quantity to deposit
        type: string
      token:
        description: token to deposit
        type: string
    required:
    - token
    - amount
    type: object
  return_value_description: ''
- _name_: display_zksync_withdraw
  description: L2 networks on Ethereum provide lower gas costs and faster transactions.
    However, users need to deposit tokens into L2 networks before they can use them.
    Use this widget to withdraw tokens from zksync L2 to mainnet L1.
  tags:
  - defi
  - zksync
  - bridge
  parameters:
    properties:
      amount:
        description: quantity to deposit
        type: string
      token:
        description: token to deposit
        type: string
    required:
    - token
    - amount
    type: object
  return_value_description: ''
- _name_: fetch_my_balance
  description: Analytics on addresses or wallets are useful for understanding the
    position of wallets or contracts as well as their flows of funds. Analytics can
    often be used to identify financial opportunities.
    Use this widget to get the balance of a token in the user's connected wallet
  tags:
  - wallet
  - balance 
  parameters:
    properties:
      token:
        description: Token to get the balance of.
        type: string
    required:
    - token
    type: object
  return_value_description: balance of a token in connected wallet, in decimal units
- _name_: fetch_transactions
  description: Analytics on addresses or wallets are useful for understanding the
    position of wallets or contracts as well as their flows of funds. Analytics can
    often be used to identify financial opportunities.
    Use this widget to get the transaction details in an account or wallet
  tags:
  - wallet
  - transactions
  parameters:
    properties:
      address:
        description: Address of the account or wallet to check the transactions of.
        type: string
      last_n:
        description: How many latest transactions the user wants to get.
        type: string
    required:
    - address
    - last_n
    type: object
  return_value_description: the transaction details
- _name_: fetch_gas
  description: Analytics on addresses or wallets are useful for understanding the
    position of wallets or contracts as well as their flows of funds. Analytics can
    often be used to identify financial opportunities.
    Use this widget to get all gas used for transactions in an account or wallet
  tags:
  - wallet
  - transactions
  - gas
  parameters:
    properties:
      address:
        description: Address of the account or wallet to check the gas of.
        type: string
    required:
    - address
    type: object
  return_value_description: the gas amount used
- _name_: fetch_eth_in
  description: Analytics on addresses or wallets are useful for understanding the
    position of wallets or contracts as well as their flows of funds. Analytics can
    often be used to identify financial opportunities.
    Use this widget to get all ETH inflow into an account or wallet
  tags:
  - wallet
  - transactions
  - eth
  parameters:
    properties:
      address:
        description: Address of the account or wallet to check the inflow ETH.
        type: string
    required:
    - address
    type: object
  return_value_description: the inflow ETH amount
- _name_: fetch_eth_out
  description: Analytics on addresses or wallets are useful for understanding the
    position of wallets or contracts as well as their flows of funds. Analytics can
    often be used to identify financial opportunities.
    Use this widget to get all ETH outflow from an account or wallet.
  tags:
  - analytics
  - wallet
  - transactions
  - eth
  parameters:
    properties:
      address:
        description: Address of the account or wallet to check the outflow ETH.
        type: string
    required:
    - address
    type: object
  return_value_description: the outflow ETH amount
- _name_: display_uniswap
  description: DEXs or Decentralized Exchanges are platforms that allow users to
    trade tokens with each other. Uniswap is a DEX that allows users to trade tokens
    with each other without an order book. Instead, Uniswap uses liquidity pools to
    facilitate trades. Use this widget to trade tokens on Uniswap. To create a Uniswap
    transaction, you need either

    1.) A token to sell, a token to buy, the transaction keyword "SELLAMOUNT", and
    an amount to sell, OR

    2.) A token to sell, a token to buy, the transaction keyword "BUYAMOUNT", and
    an amount to buy.
  tags:
  - defi
  - uniswap
  - swap
  - trade
  parameters:
    properties:
      amount:
        description: Amount of token described by transaction keyword that we are
          trying to buy or sell.
        type: string
      tokenToBuy:
        description: Token to buy in the swap transaction.
        type: string
      tokenToSell:
        description: Token to sell in the swap transaction.
        type: string
      transactionKeyword:
        description: Either SELLAMOUNT if amount refers to token to sell or BUYAMOUNT
          if amount refers to token to buy.
        type: string
    required:
    - tokenToSell
    - tokenToBuy
    - transactionKeyword
    - amount
    type: object
  return_value_description: ''
- _name_: fetch_nfts_owned_by_address_or_domain
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to fetch NFTs owned by a wallet address or ENS domain on a particular network
  tags:
  - nft
  - wallet
  - address
  parameters:
    properties:
      network:
        description: Network to fetch NFTs on. Use an empty string if the input parameter value is unknown but do not ask user to input empty string.
        type: string
      addressOrDomain:
        description: Wallet address or ENS domain
        type: string
    required:
      - network
      - addressOrDomain
    type: object
  return_value_description: List of NFT Assets
- _name_: fetch_nfts_owned_by_user
  description: NFTs are non-fungible tokens. They are unique and can be used to represent
    ownership of digital assets. Usually, they include some sort of image or other media and can be traded.
    Use this widget to fetch NFTs owned by the current user
  tags:
  - nft
  - wallet
  parameters:
    properties:
      network:
        description: Network to fetch NFTs on. Use an empty string if the input parameter value is unknown but do not ask user to input empty string.
        type: string
    required:
      - network
    type: object
  return_value_description: List of NFT Assets
- _name_: display_stake_sfrxeth
  description: Staking ETH is a way to earn yield on ETH. The user deposits ETH into
    a staking contract and receives more ETH than they deposited when the position is withdrawn.
    Use this widget to stake ETH on FRAX and receive sfrxETH.
  tags:
  - defi
  - stake
  - frax
  - sfrxeth
  parameters:
    properties:
      receiver:
        description: Address to receive the sfrxETH
        type: string
      value:
        description: Amount of ETH to exchange for sfrxETH
        type: string
    required:
    - receiver
    - value
    type: object
  return_value_description: ''
- _name_: display_yield_protocol_lend
  description: The Yield Protocol is a fixed rate borrowing and lending application. when lending,
  the user transfers an asset to the Yield Protocol, and the Yield Protocol gives the user a token
  representing the lending position. Yield Protocol pays an interest rate to the user while lending.
  Use this widget to open a lend position on the yield protocol.
  tags:
  - defi
  - yield
  - fixed
  - lend
  parameters:
    properties:
      token:
        description: the token to lend
        type: string
      amount:
        description: amount of token to lend
        type: string
    required:
      - token
      - amount
    type: object
  return_value_description: ""
- _name_: display_yield_protocol_lend_close
  description: The Yield Protocol is a fixed rate borrowing and lending application. when lending,
  the user transfers an asset to the Yield Protocol, and the Yield Protocol gives the user a token
  representing the lending position. Yield Protocol pays an interest rate to the user while lending.
  Use this widget to close a lend position on the yield protocol.
  tags:
  - defi
  - yield
  - fixed
  - lend
  parameters:
    properties:
      token:
        description: the token to close
        type: string
      amount:
        description: amount of token to close
        type: string
    required:
      - token
      - amount
    type: object
  return_value_description: ""
- _name_: display_yield_protocol_borrow
  description: The Yield Protocol is a fixed rate borrowing and lending application. when borrowing,
  the user transfers collateral to the Yield Protocol, and the Yield Protocol lends the user a token.
  The user pays an interest rate on the borrowed token. You can use this widget on yield protocol 
  to borrow a token using a different token as collateral.
  tags:
  - defi
  - yield
  - fixed
  - borrow
  parameters:
    properties:
      borrowToken:
        description: the token to borrow
        type: string
      borrowAmount:
        description: amount of token to borrow
        type: string
      collateralToken:
        description: the token to use as collateral
        type: string
      collateralAmount:
        description: amount of collateral token to use
        type: string
    required:
      - borrowToken
      - borrowAmount
      - collateralToken
      - collateralAmount
    type: object
  return_value_description: ""
- _name_: display_yield_protocol_borrow_close
  description: The Yield Protocol is a fixed rate borrowing and lending application. when borrowing,
  the user transfers collateral to the Yield Protocol, and the Yield Protocol lends the user a token.
  The user pays an interest rate on the borrowed token. You can use this widget on yield protocol to
  close a vault (borrow position) made up of debt and collateral. The user will then receive the
  collateral back.
  tags:
  - defi
  - yield
  - fixed
  - borrow
  parameters:
    properties:
      borrowToken:
        description: the token that was borrowed
        type: string
    required:
      - borrowToken
    type: object
  return_value_description: ""
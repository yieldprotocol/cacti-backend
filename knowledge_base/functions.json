[{"name": "display_transfer", "description": "Transfer a token from a user's wallet to another address", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Symbol of the token being transferred."}, "amount": {"type": "string", "description": "Quantity to transfer."}, "address": {"type": "string", "description": "Transfer recipient address."}}, "required": ["token", "amount", "address"]}}, {"name": "fetch_price", "description": "Get the price of a token. Note, when the quoteToken isn't explicitly specified assume it to be USD", "parameters": {"type": "object", "properties": {"basetoken": {"type": "string", "description": "Token to get the price of."}, "quotetoken": {"type": "string", "description": "Token to use as units for price."}}, "required": ["basetoken", "quotetoken"]}}, {"name": "fetch_balance", "description": "Get the balance of a token in an account or wallet. Don't use this if we don't have the address.", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Token to get the balance of."}, "address": {"type": "string", "description": "Address of the account or wallet to check the balance of."}}, "required": ["token", "address"]}}, {"name": "fetch_my_balance", "description": "Get the balance of a token in the user's connected wallet", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Token to get the balance of."}}, "required": ["token"]}}, {"name": "fetch_transactions", "description": "Get the transaction details in an account or wallet", "parameters": {"type": "object", "properties": {"address": {"type": "string", "description": "Address of the account or wallet to check the transactions of."}, "last_n": {"type": "string", "description": "How many latest transactions the user wants to get."}}, "required": ["address", "last_n"]}}, {"name": "fetch_gas", "description": "Get all gas used for transactions in an account or wallet", "parameters": {"type": "object", "properties": {"address": {"type": "string", "description": "Address of the account or wallet to check the gas of."}}, "required": ["address"]}}, {"name": "fetch_eth_in", "description": "Get all ETH inflow into an account or wallet", "parameters": {"type": "object", "properties": {"address": {"type": "string", "description": "Address of the account or wallet to check the inflow ETH."}}, "required": ["address"]}}, {"name": "fetch_eth_out", "description": "Get all ETH outflow from an account or wallet", "parameters": {"type": "object", "properties": {"address": {"type": "string", "description": "Address of the account or wallet to check the outflow ETH."}}, "required": ["address"]}}, {"name": "display_uniswap", "description": "use the Uniswap decentralized application for trading one token for another. To create a Uniswap transaction, you need either:\n1.) A token to sell, a token to buy, the transaction keyword \"SELLAMOUNT\", and an amount to sell, OR\n2.) A token to sell, a token to buy, the transaction keyword \"BUYAMOUNT\", and an amount to buy.", "parameters": {"type": "object", "properties": {"tokenToSell": {"type": "string", "description": "Token to sell in the swap transaction."}, "tokenToBuy": {"type": "string", "description": "Token to buy in the swap transaction."}, "transactionKeyword": {"type": "string", "description": "Either SELLAMOUNT if amount refers to token to sell or BUYAMOUNT if amount refers to token to buy."}, "amount": {"type": "string", "description": "Amount of token described by transaction keyword that we are trying to buy or sell."}}, "required": ["tokenToSell", "tokenToBuy", "transactionKeyword", "amount"]}}, {"name": "fetch_nft_buy_asset", "description": "Buy an NFT asset of a collection on the OpenSea marketplace, given its network, address, and token ID. Don't use this if we don't have the collection network and address and token ID of the asset we want to purchase.", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "Network of the NFT asset."}, "address": {"type": "string", "description": "Contract address of the NFT asset."}, "tokenID": {"type": "string", "description": "Token ID of the asset."}}, "required": ["network", "address", "tokenID"]}}, {"name": "fetch_nft_search", "description": "Search for NFT collections given a query phrase, a description, or a name", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "String of keywords to describe the kind of NFT collections to find."}}, "required": ["query"]}}, {"name": "fetch_nft_collection_assets_by_trait", "description": "List assets with a particular trait name and value from a specific NFT collection given its network and address. Don't use this if we don't have the collection network and address.\nRequired parameters:", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "Network of the NFT collection."}, "address": {"type": "string", "description": "Contract address of the NFT collection."}, "traitName": {"type": "string", "description": "Name of trait."}, "traitValue": {"type": "string", "description": "Value of trait."}}, "required": ["network", "address", "traitName", "traitValue"]}}, {"name": "fetch_nft_collection_assets_for_sale_by_trait", "description": "List assets available for purchase with a particular trait name and value from a specific NFT collection given its network and address. Don't use this if we don't have the collection network and address.", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "Network of the NFT collection."}, "address": {"type": "string", "description": "Contract address of the NFT collection."}, "traitName": {"type": "string", "description": "Name of trait."}, "traitValue": {"type": "string", "description": "Value of trait."}}, "required": ["network", "address", "traitName", "traitValue"]}}, {"name": "fetch_nft_collection_info", "description": "Retrieve data and assets of an NFT collection given its network and address.", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "network of the NFT collection."}, "address": {"type": "string", "description": "Contract address of the NFT collection."}}, "required": ["network", "address"]}}, {"name": "fetch_nft_collection_assets_for_sale", "description": "Retrieve assets available for purchase of an NFT collection given its network and address.", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "network of the NFT collection."}, "address": {"type": "string", "description": "Contract address of the NFT collection."}}, "required": ["network", "address"]}}, {"name": "fetch_nft_collection_traits", "description": "Retrieve traits of an NFT collection given its network and address.", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "Network of the NFT collection."}, "address": {"type": "string", "description": "Contract address of the NFT collection."}}, "required": ["network", "address"]}}, {"name": "fetch_nft_collection_trait_values", "description": "Retrieve trait values of a trait of an NFT collection given its network and address.", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "network of the NFT collection."}, "address": {"type": "string", "description": "Contract address of the NFT collection."}, "traitName": {"type": "string", "description": "Name of trait to fetch values of."}}, "required": ["network", "address", "traitName"]}}, {"name": "fetch_nft_asset_traits", "description": "Retrieve data and traits of an NFT asset in a collection given its network, address, and token ID.", "parameters": {"type": "object", "properties": {"network": {"type": "string", "description": "Network of the NFT asset."}, "address": {"type": "string", "description": "Contract address of the NFT asset."}, "tokenID": {"type": "string", "description": "Token ID of the asset."}}, "required": ["network", "address", "tokenID"]}}, {"name": "fetch_yields", "description": "Get the yields for crypto assets. The user may not specify all parameters so do not guess any parameter.", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Token to get the yield for. Normalize the token name to its popular symbol representation in the ecoystem. Use '*' when parameter not available or the user wants all tokens."}, "network": {"type": "string", "description": "Blockchain to get the yield for. Normalize the network name to its popular representation in the ecosystem. Use '*' when parameter not available or the user wants all networks."}, "count": {"type": "string", "description": "Number of yield sources. Use '*' when parameter not available."}}, "required": ["token", "network", "count"]}}, {"name": "ens_from_address", "description": "Get the ENS domain name (*.eth) for a wallet address.", "parameters": {"type": "object", "properties": {"address": {"type": "string", "description": "Address of the account or wallet."}}, "required": ["address"]}}, {"name": "address_from_ens", "description": "Get the wallet address for an ENS domain name (*.eth).", "parameters": {"type": "object", "properties": {"domain": {"type": "string", "description": "Domain name of the account or wallet."}}, "required": ["domain"]}}, {"name": "register_ens_domain", "description": "Register an ENS domain that ends with *.eth", "parameters": {"type": "object", "properties": {"domain": {"type": "string", "description": "Domain name to register."}}, "required": ["domain"]}}, {"name": "set_ens_text", "description": "Set the text record for an ENS domain that ends with *.eth in a key value pair format.", "parameters": {"type": "object", "properties": {"domain": {"type": "string", "description": "ENS domain name."}, "key": {"type": "string", "description": "Key of the text record."}, "value": {"type": "string", "description": "Value of the text record."}}, "required": ["domain", "key", "value"]}}, {"name": "set_ens_primary_name", "description": "Set a primary ENS name for their connected wallet account.", "parameters": {"type": "object", "properties": {"domain": {"type": "string", "description": "Domain name to use as primary ENS name."}}, "required": ["domain"]}}, {"name": "set_ens_avatar_nft", "description": "Set an nft as their ENS domain's avatar. Do not guess any parameter, if any parameter is missing, set the default value as 'None'.", "parameters": {"type": "object", "properties": {"domain": {"type": "string", "description": "ENS domain name."}, "nftContractAddress": {"type": "string", "description": "Contract address of the NFT."}, "nftId": {"type": "string", "description": "Token ID of the NFT."}}, "required": ["domain", "nftContractAddress", "nftId"]}}, {"name": "aave_supply", "description": "Deposit or supply tokens into Aave project", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Token to supply."}, "amount": {"type": "string", "description": "Quantity to supply."}}, "required": ["token", "amount"]}}, {"name": "aave_borrow", "description": "Borrow tokens from Aave project", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Token to borrow."}, "amount": {"type": "string", "description": "Quantity to borrow."}}, "required": ["token", "amount"]}}, {"name": "aave_repay", "description": "Repay back borrowed tokens from Aave project", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Token to repay."}, "amount": {"type": "string", "description": "Quantity to repay."}}, "required": ["token", "amount"]}}, {"name": "aave_withdraw", "description": "Withdraw deposited tokens from Aave project", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "Token to withdraw."}, "amount": {"type": "string", "description": "quantity to withdraw."}}, "required": ["token", "amount"]}}, {"name": "display_yield_farm", "description": "Used for the Compound project to allow the user to yield farm by putting tokens or depositing tokens of a certain amount into the Compound project.", "parameters": {"type": "object", "properties": {"project": {"type": "string", "description": "Name of the project to deposit the token in."}, "network": {"type": "string", "description": "Network or blockchain of the project. Default to Ethereum if not specified."}, "token": {"type": "string", "description": "Token to deposit in the project."}, "amount": {"type": "string", "description": "Amount of token to deposit in the project."}}, "required": ["project", "network", "token", "amount"]}}, {"name": "fetch_app_info", "description": "Used when we need to handle common questions and answers about the chat assistant app, what it can do, how to interact with it, at a high-level. Only useful for questions about the chat app experience. It does not know specific information about the web3 ecosystem, of tokens or NFTs or contracts, or access to live data and APIs.", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "a standalone query with all relevant contextual details pertaining to the chat web application."}}, "required": ["query"]}}, {"name": "fetch_scraped_sites", "description": "Answer questions using general content scraped from web3 sites. It does not know about this app or about widget magic commands for invoking transactions or fetching data about specific things like NFTs or balances.", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "a standalone question representing information to be retrieved from the index."}}, "required": ["query"]}}, {"name": "display_zksync_deposit", "description": "Used to bridge and deposit tokens from mainnet L1 to zksync L2.", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "token to deposit"}, "amount": {"type": "string", "description": "quantity to deposit"}}, "required": ["token", "amount"]}}, {"name": "display_zksync_withdraw", "description": "Used to withdraw tokens from zksync L2 to mainnet L1", "parameters": {"type": "object", "properties": {"token": {"type": "string", "description": "token to deposit"}, "amount": {"type": "string", "description": "quantity to deposit"}}, "required": ["token", "amount"]}}]